onlysources.tex ?= manuscript.tex
BUILD_STRATEGY  := pdflatex
neverclean      ?= *.pdf
EMACS = emacs
BATCH_EMACS=$(EMACS) --batch -q -l init.el


MANUSCRIPT_DEPS := ../VowelProcessingChapter/Chapter04Appendix.org \
../VowelProcessingChapter/Chapter04.org   \
../GAChapter/Chapter05Appendix.org   \
../GAChapter/Chapter05.org   \
../LiteratureReview/Chapter01.org \
../MethodsChapter/Chapter02.org \
../org-manuscript/Chapter06.org \
../SimpleResponsesChapter/Chapter03.org  \
../SimpleResponsesChapter/Chapter03Appendix.org

REQUIREMENTS=emacs gnuplot dia octave inkscape xzcat epstopdf pdflatex makeglossaries pcregrep fixbb

check:
	for req in $(REQUIREMENTS); do \
	    which $$req > /dev/null || echo "MISSING DEPENDENCY $$req"; \
	done

manuscript.tex: manuscript.org $(MANUSCRIPT_DEPS)
	$(BATCH_EMACS) manuscript.org -f org-export-as-latex

Chapter06.tex: Chapter06.org 
	$(BATCH_EMACS) --eval "(setq org-export-latex-title-command \"\")" Chapter06.org -f org-export-as-latex

update-source-blocks:
	echo "Deleting source blocks in manuscript.org"
	sed '/^.*Source blocks/,$$d' manuscript.org >  manuscript.org.tmp
	echo "Extracting source blocks from chapter files"
	echo "\n\n**** Source blocks      :noexport:\n" >> manuscript.org.tmp
	pcregrep  -Mi '^\*\*\*\* Source.*noexport:(.*\n){0,100}^\*' ../*/Chapter03.org | grep -v '^#+RESULTS' | grep -v '^[:|*]'  | grep -v '^\.\.' >> manuscript.org.tmp
	pcregrep  -Mi '^\*\*\*\* Source.*noexport:(.*\n){0,30}^\*' ../*/Chapter04.org | grep -v '^#+RESULTS' | grep -v '^[:|*]'  | grep -v '^\.\.' >> manuscript.org.tmp
	cp manuscript.org manuscript.org.old
	cp manuscript.org.tmp manuscript.org
